"""Add ondelete CASCADE

Revision ID: a8c4c6d8cc51
Revises: 351262a5207c
Create Date: 2025-08-20 13:26:24.358251

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a8c4c6d8cc51'
down_revision: Union[str, Sequence[str], None] = '351262a5207c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('collection_events_collection_group_id_fkey'), 'collection_events', type_='foreignkey')
    op.create_foreign_key(None, 'collection_events', 'collection_groups', ['collection_group_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('collection_group_snapshots_collection_group_id_fkey'), 'collection_group_snapshots', type_='foreignkey')
    op.create_foreign_key(None, 'collection_group_snapshots', 'collection_groups', ['collection_group_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('collection_groups_location_id_fkey'), 'collection_groups', type_='foreignkey')
    op.drop_constraint(op.f('collection_groups_group_code_fkey'), 'collection_groups', type_='foreignkey')
    op.create_foreign_key(None, 'collection_groups', 'locations', ['location_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'collection_groups', 'groups', ['group_code'], ['gr_code'], ondelete='CASCADE')
    op.drop_constraint(op.f('locations_group_code_fkey'), 'locations', type_='foreignkey')
    op.create_foreign_key(None, 'locations', 'groups', ['group_code'], ['gr_code'], ondelete='CASCADE')
    op.drop_constraint(op.f('schedules_event_id_fkey'), 'schedules', type_='foreignkey')
    op.create_foreign_key(None, 'schedules', 'collection_events', ['event_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'schedules', type_='foreignkey')
    op.create_foreign_key(op.f('schedules_event_id_fkey'), 'schedules', 'collection_events', ['event_id'], ['id'])
    op.drop_constraint(None, 'locations', type_='foreignkey')
    op.create_foreign_key(op.f('locations_group_code_fkey'), 'locations', 'groups', ['group_code'], ['gr_code'])
    op.drop_constraint(None, 'collection_groups', type_='foreignkey')
    op.drop_constraint(None, 'collection_groups', type_='foreignkey')
    op.create_foreign_key(op.f('collection_groups_group_code_fkey'), 'collection_groups', 'groups', ['group_code'], ['gr_code'])
    op.create_foreign_key(op.f('collection_groups_location_id_fkey'), 'collection_groups', 'locations', ['location_id'], ['id'])
    op.drop_constraint(None, 'collection_group_snapshots', type_='foreignkey')
    op.create_foreign_key(op.f('collection_group_snapshots_collection_group_id_fkey'), 'collection_group_snapshots', 'collection_groups', ['collection_group_id'], ['id'])
    op.drop_constraint(None, 'collection_events', type_='foreignkey')
    op.create_foreign_key(op.f('collection_events_collection_group_id_fkey'), 'collection_events', 'collection_groups', ['collection_group_id'], ['id'])
    # ### end Alembic commands ###
