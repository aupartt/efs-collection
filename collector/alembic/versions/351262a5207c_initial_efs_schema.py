"""Add schedules

Revision ID: 36be7fda7bc9
Revises: 351262a5207c
Create Date: 2025-08-12 15:09:36.251625

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '351262a5207c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('gr_code', sa.String(length=10), nullable=False),
    sa.Column('gr_lib', sa.String(), nullable=False),
    sa.Column('gr_desd', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('gr_code')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sampling_location_code', sa.String(length=10), nullable=False),
    sa.Column('region_code', sa.String(length=10), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('post_code', sa.String(length=10), nullable=False),
    sa.Column('full_address', sa.String(), nullable=False),
    sa.Column('address1', sa.String(), nullable=True),
    sa.Column('address2', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('give_blood', sa.Boolean(), nullable=False),
    sa.Column('give_plasma', sa.Boolean(), nullable=False),
    sa.Column('give_platelet', sa.Boolean(), nullable=False),
    sa.Column('horaires', sa.String(), nullable=True),
    sa.Column('infos', sa.String(), nullable=True),
    sa.Column('metro', sa.String(), nullable=True),
    sa.Column('bus', sa.String(), nullable=True),
    sa.Column('tram', sa.String(), nullable=True),
    sa.Column('parking', sa.String(), nullable=True),
    sa.Column('debut_infos', sa.String(), nullable=True),
    sa.Column('fin_infos', sa.String(), nullable=True),
    sa.Column('ville', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('group_code', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['group_code'], ['groups.gr_code'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'full_address', 'latitude', 'longitude', 'sampling_location_code', name='unique_location')
    )
    op.create_index(op.f('ix_locations_group_code'), 'locations', ['group_code'], unique=False)
    op.create_index(op.f('ix_locations_post_code'), 'locations', ['post_code'], unique=False)
    op.create_table('collection_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('efs_id', sa.String(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('nature', sa.String(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_publishable', sa.Boolean(), nullable=False),
    sa.Column('propose_planning_rdv', sa.Boolean(), nullable=False),
    sa.Column('url_blood', sa.String(), nullable=True),
    sa.Column('url_plasma', sa.String(), nullable=True),
    sa.Column('url_platelet', sa.String(), nullable=True),
    sa.Column('convocation_label_long', sa.String(), nullable=True),
    sa.Column('convocation_label_sms', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('group_code', sa.String(length=10), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_code'], ['groups.gr_code'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('efs_id', 'nature', name='unique_collection_group')
    )
    op.create_index(op.f('ix_collection_groups_efs_id'), 'collection_groups', ['efs_id'], unique=True)
    op.create_table('collection_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lp_code', sa.String(length=10), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('morning_start_time', sa.Time(), nullable=True),
    sa.Column('morning_end_time', sa.Time(), nullable=True),
    sa.Column('afternoon_start_time', sa.Time(), nullable=True),
    sa.Column('afternoon_end_time', sa.Time(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('collection_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['collection_group_id'], ['collection_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collection_group_snapshots',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('taux_remplissage', sa.Float(), nullable=True),
    sa.Column('nb_places_restantes_st', sa.Integer(), nullable=True),
    sa.Column('nb_places_totales_st', sa.Integer(), nullable=True),
    sa.Column('nb_places_reservees_st', sa.Integer(), nullable=True),
    sa.Column('nb_places_restantes_pla', sa.Integer(), nullable=True),
    sa.Column('nb_places_totales_pla', sa.Integer(), nullable=True),
    sa.Column('nb_places_reservees_pla', sa.Integer(), nullable=True),
    sa.Column('nb_places_restantes_cpa', sa.Integer(), nullable=True),
    sa.Column('nb_places_totales_cpa', sa.Integer(), nullable=True),
    sa.Column('nb_places_reservees_cpa', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('collection_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['collection_group_id'], ['collection_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_collection_group_snapshots_created_at'), 'collection_group_snapshots', ['created_at'], unique=False)
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('efs_id', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_slots', sa.Integer(), nullable=False),
    sa.Column('collecte_type', sa.String(), nullable=False),
    sa.Column('timetables', sa.JSON(), nullable=False),
    sa.Column('timetable_min', sa.Time(), nullable=False),
    sa.Column('timetable_max', sa.Time(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['collection_events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedules_efs_id'), 'schedules', ['efs_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_schedules_efs_id'), table_name='schedules')
    op.drop_table('schedules')
    op.drop_index(op.f('ix_collection_group_snapshots_created_at'), table_name='collection_group_snapshots')
    op.drop_table('collection_group_snapshots')
    op.drop_table('collection_events')
    op.drop_index(op.f('ix_collection_groups_efs_id'), table_name='collection_groups')
    op.drop_table('collection_groups')
    op.drop_index(op.f('ix_locations_post_code'), table_name='locations')
    op.drop_index(op.f('ix_locations_group_code'), table_name='locations')
    op.drop_table('locations')
    op.drop_table('groups')
    # ### end Alembic commands ###
